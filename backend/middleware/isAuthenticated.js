import  jwt  from "jsonwebtoken";
import cookieParser from "cookie-parser";
console.log("hi");

export const isAuthenticated = async(req,res,next)=>{
    try{
        const token=req.cookies.token;
      console.log(token);
     
        if(!token){ // token not generated yet
            return res.status(401).json({message:"User is not Authenticated"});
        }
        // checking correctness of token
        const decode = await jwt.verify(token,process.env.JWT_SECRET_KEY);// verify will give token data if correct token

        if(!decode){
            return res.status(401).json({message:"Invalid token"});
                } 
        // now for further use we'll store user id in req.id , but why?? req is comming fromm user side to id should be there
        // might be id is generated by backend while registration and user dont have it, we stored in token while authentications, so now storing in req
        req.id=decode.userId;  
         console.log(req.id);
        next(); // it runs the next function which will be passed in the argument list of router
    } catch(error){
        console.log(error);
    }
}   
export default isAuthenticated;
